name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    name: 테스트
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Node.js 설정
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
    
    - name: 의존성 설치
      run: npm ci
    
    - name: 린트 검사 실행
      run: npm run lint:check
    
    - name: 타입 검사 실행
      run: npm run typecheck
    
    - name: 테스트 실행
      run: npm run test:ci
  
  build:
    name: 빌드
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Node.js 설정
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
    
    - name: 의존성 설치
      run: npm ci
    
    - name: 네이티브 모듈 빌드
      run: npm run build:native
    
    - name: Next.js 빌드
      run: npm run build
    
    - name: 빌드 결과물 업로드
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: .next/

  deploy-staging:
    name: 스테이징 환경 배포
    if: github.ref == 'refs/heads/develop'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3
        
      - name: 빌드 결과물 다운로드
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: .next
      
      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: 의존성 설치
        run: npm ci --production
      
      # 여기에 스테이징 서버 배포 스크립트를 추가합니다.
      - name: 스테이징 서버 배포
        run: echo "스테이징 배포 스크립트 실행" # 실제 배포 스크립트로 대체

  deploy-production:
    name: 프로덕션 환경 배포
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://typing-stats-app.example.com
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3
        
      - name: 빌드 결과물 다운로드
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: .next
      
      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: 의존성 설치
        run: npm ci --production
      
      # 여기에 프로덕션 서버 배포 스크립트를 추가합니다.
      - name: 프로덕션 서버 배포
        run: echo "프로덕션 배포 스크립트 실행" # 실제 배포 스크립트로 대체
