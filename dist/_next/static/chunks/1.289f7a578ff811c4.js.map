{"version":3,"file":"static/chunks/1.289f7a578ff811c4.js","mappings":"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","sources":["webpack://_N_E/./src/app/components/NativeModuleTest.tsx","webpack://_N_E/./src/app/components/NativeModuleTest.module.css"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport styles from './NativeModuleTest.module.css';\r\n\r\n// 모듈 정보 인터페이스\r\ninterface ModuleInfo {\r\n  isLoaded: boolean;\r\n  isFallback: boolean;\r\n  availableFunctions: string[];\r\n  version: string;\r\n  timestamp: number;\r\n}\r\n\r\n// 메모리 정보 인터페이스\r\ninterface MemoryInfo {\r\n  heap_used?: number;\r\n  heap_total?: number;\r\n  heap_used_mb?: number;\r\n  percent_used?: number;\r\n  error?: string;\r\n}\r\n\r\n// API 응답 인터페이스\r\ninterface TestResponse {\r\n  success: boolean;\r\n  moduleInfo?: ModuleInfo;\r\n  memoryInfo?: MemoryInfo;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\nexport default function NativeModuleTest() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [result, setResult] = useState<TestResponse | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // 네이티브 모듈 테스트\r\n  const testNativeModule = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/native/test');\r\n      const data: TestResponse = await response.json();\r\n      setResult(data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : '알 수 없는 오류');\r\n      setResult(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // 메모리 최적화 테스트\r\n  const testMemoryOptimization = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/native/memory/optimize');\r\n      const data = await response.json();\r\n      \r\n      // 메모리 최적화 후 모듈 상태 다시 테스트\r\n      await testNativeModule();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : '알 수 없는 오류');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // 페이지 로딩 시 테스트 실행\r\n  useEffect(() => {\r\n    testNativeModule();\r\n  }, []);\r\n\r\n  // 연결 상태에 따른 클래스 이름 계산\r\n  const getStatusClassName = () => {\r\n    if (!result) return styles.unknown;\r\n    if (!result.success) return styles.error;\r\n    if (result.moduleInfo?.isLoaded && !result.moduleInfo?.isFallback) return styles.success;\r\n    if (result.moduleInfo?.isLoaded && result.moduleInfo?.isFallback) return styles.warning;\r\n    return styles.error;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>Rust 네이티브 모듈 연결 테스트</h2>\r\n      \r\n      <div className={`${styles.statusCard} ${getStatusClassName()}`}>\r\n        <div className={styles.statusHeader}>\r\n          <h3 className={styles.statusTitle}>연결 상태</h3>\r\n          <div className={styles.statusBadge}>\r\n            {loading ? '테스트 중...' : \r\n              result?.success \r\n                ? (result.moduleInfo?.isFallback ? 'Fallback 모드' : '연결됨') \r\n                : '연결 실패'}\r\n          </div>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className={styles.errorMessage}>\r\n            <p>오류: {error}</p>\r\n          </div>\r\n        )}\r\n        \r\n        {result?.success && (\r\n          <div className={styles.resultContent}>\r\n            <div className={styles.resultItem}>\r\n              <span className={styles.label}>모듈 로드됨:</span>\r\n              <span className={styles.value}>{result.moduleInfo?.isLoaded ? '예' : '아니오'}</span>\r\n            </div>\r\n            \r\n            <div className={styles.resultItem}>\r\n              <span className={styles.label}>Fallback 모드:</span>\r\n              <span className={styles.value}>{result.moduleInfo?.isFallback ? '예' : '아니오'}</span>\r\n            </div>\r\n            \r\n            <div className={styles.resultItem}>\r\n              <span className={styles.label}>버전:</span>\r\n              <span className={styles.value}>{result.moduleInfo?.version || 'N/A'}</span>\r\n            </div>\r\n            \r\n            {result.memoryInfo && !result.memoryInfo.error && (\r\n              <>\r\n                <div className={styles.divider}></div>\r\n                <h4 className={styles.sectionTitle}>메모리 정보</h4>\r\n                \r\n                <div className={styles.resultItem}>\r\n                  <span className={styles.label}>사용된 힙:</span>\r\n                  <span className={styles.value}>\r\n                    {result.memoryInfo.heap_used_mb ? `${result.memoryInfo.heap_used_mb.toFixed(2)}MB` : 'N/A'}\r\n                  </span>\r\n                </div>\r\n                \r\n                <div className={styles.resultItem}>\r\n                  <span className={styles.label}>사용률:</span>\r\n                  <span className={styles.value}>\r\n                    {result.memoryInfo.percent_used ? `${result.memoryInfo.percent_used.toFixed(1)}%` : 'N/A'}\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n            \r\n            {result.moduleInfo?.availableFunctions && (\r\n              <>\r\n                <div className={styles.divider}></div>\r\n                <h4 className={styles.sectionTitle}>사용 가능한 함수</h4>\r\n                <div className={styles.functionList}>\r\n                  {result.moduleInfo.availableFunctions.length > 0 ? (\r\n                    result.moduleInfo.availableFunctions.map(func => (\r\n                      <div key={func} className={styles.functionItem}>{func}</div>\r\n                    ))\r\n                  ) : (\r\n                    <div className={styles.emptyMessage}>사용 가능한 함수 없음</div>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        <div className={styles.actions}>\r\n          <button \r\n            className={styles.testButton} \r\n            onClick={testNativeModule} \r\n            disabled={loading}\r\n          >\r\n            {loading ? '테스트 중...' : '다시 테스트'}\r\n          </button>\r\n          \r\n          <button \r\n            className={styles.optimizeButton} \r\n            onClick={testMemoryOptimization} \r\n            disabled={loading}\r\n          >\r\n            메모리 최적화 테스트\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={styles.note}>\r\n        <p>\r\n          <strong>참고:</strong> Rust 네이티브 모듈을 사용할 수 없는 경우 JS로 구현된 폴백 모듈이 사용됩니다.\r\n          폴백 모듈은 모든 기능을 지원하지 않을 수 있습니다.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NativeModuleTest_container__AlUxf\",\"title\":\"NativeModuleTest_title__sL7mZ\",\"statusCard\":\"NativeModuleTest_statusCard__jrPHj\",\"unknown\":\"NativeModuleTest_unknown__yUTQ5\",\"success\":\"NativeModuleTest_success__XtAPc\",\"warning\":\"NativeModuleTest_warning__MUuZG\",\"error\":\"NativeModuleTest_error__b8s7N\",\"statusHeader\":\"NativeModuleTest_statusHeader__ZWyww\",\"statusTitle\":\"NativeModuleTest_statusTitle__PZk85\",\"statusBadge\":\"NativeModuleTest_statusBadge__7uMN3\",\"resultContent\":\"NativeModuleTest_resultContent__khLlo\",\"resultItem\":\"NativeModuleTest_resultItem__HHK1t\",\"label\":\"NativeModuleTest_label__wLEDi\",\"value\":\"NativeModuleTest_value__XZPY9\",\"divider\":\"NativeModuleTest_divider__vt3Iw\",\"sectionTitle\":\"NativeModuleTest_sectionTitle__aULRY\",\"functionList\":\"NativeModuleTest_functionList__UOeYc\",\"functionItem\":\"NativeModuleTest_functionItem__eY57T\",\"emptyMessage\":\"NativeModuleTest_emptyMessage__3qgwO\",\"errorMessage\":\"NativeModuleTest_errorMessage__0CZLJ\",\"actions\":\"NativeModuleTest_actions__MIAyk\",\"testButton\":\"NativeModuleTest_testButton__SRY7B\",\"optimizeButton\":\"NativeModuleTest_optimizeButton__xJabV\",\"note\":\"NativeModuleTest_note__qJQEA\"};"],"names":["NativeModuleTest","result","loading","setLoading","useState","setResult","error","setError","testNativeModule","response","fetch","data","json","err","Error","message","testMemoryOptimization","useEffect","div","className","styles","h2","getStatusClassName","success","moduleInfo","isLoaded","isFallback","h3","p","span","version","memoryInfo","h4","heap_used_mb","toFixed","percent_used","availableFunctions","length","map","func","button","disabled","strong"],"sourceRoot":"","ignoreList":[]}