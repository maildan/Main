{"version":3,"file":"static/chunks/app/gpu-test/page-9dbcdd3208e8fd42.js","mappings":"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","sources":["webpack://_N_E/./src/app/lib/utils.ts","webpack://_N_E/./src/app/components/ui/button.tsx","webpack://_N_E/./src/app/components/ui/card.tsx","webpack://_N_E/./src/app/components/ui/separator.tsx","webpack://_N_E/./src/app/components/ui/switch.tsx","webpack://_N_E/./src/app/components/ui/label.tsx","webpack://_N_E/./src/app/components/ui/badge.tsx","webpack://_N_E/./src/app/gpu-test/page.tsx","webpack://_N_E/?e29e"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n} ","import * as React from 'react';\r\nimport { Slot } from '@radix-ui/react-slot';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst buttonVariants = cva(\r\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\r\n        destructive:\r\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\r\n        outline:\r\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\r\n        secondary:\r\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\r\n        link: 'text-primary underline-offset-4 hover:underline',\r\n      },\r\n      size: {\r\n        default: 'h-10 px-4 py-2',\r\n        sm: 'h-9 rounded-md px-3',\r\n        lg: 'h-11 rounded-md px-8',\r\n        icon: 'h-10 w-10',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : 'button';\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nButton.displayName = 'Button';\r\n\r\nexport { Button, buttonVariants };","import * as React from 'react';\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nCard.displayName = 'Card';\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardHeader.displayName = 'CardHeader';\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      'text-2xl font-semibold leading-none tracking-tight',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nCardTitle.displayName = 'CardTitle';\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn('text-sm text-muted-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardDescription.displayName = 'CardDescription';\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\r\n));\r\nCardContent.displayName = 'CardContent';\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('flex items-center p-6 pt-0', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardFooter.displayName = 'CardFooter';\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }; ","import * as React from 'react';\r\nimport * as SeparatorPrimitive from '@radix-ui/react-separator';\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = 'horizontal', decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        'shrink-0 bg-border',\r\n        orientation === 'horizontal' ? 'h-[1px] w-full' : 'h-full w-[1px]',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n);\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName;\r\n\r\nexport { Separator }; ","import * as React from 'react';\r\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      'peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input',\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        'pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0'\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n));\r\nSwitch.displayName = SwitchPrimitives.Root.displayName;\r\n\r\nexport { Switch }; ","import * as React from 'react';\r\nimport * as LabelPrimitive from '@radix-ui/react-label';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst labelVariants = cva(\r\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\r\n);\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n));\r\nLabel.displayName = LabelPrimitive.Root.displayName;\r\n\r\nexport { Label }; ","import * as React from 'react';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { cn } from '../../lib/utils';\r\n\r\nconst badgeVariants = cva(\r\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\r\n        secondary:\r\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n        destructive:\r\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\r\n        outline: 'text-foreground',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  );\r\n}\r\n\r\nexport { Badge, badgeVariants }; ","'use client';\r\n\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { Button } from '../components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';\r\nimport { Separator } from '../components/ui/separator';\r\nimport { Switch } from '../components/ui/switch';\r\nimport { Label } from '../components/ui/label';\r\nimport { Badge } from '../components/ui/badge';\r\n\r\ninterface GpuInfo {\r\n  features: Record<string, string>;\r\n  settings: {\r\n    gpuAcceleration: boolean;\r\n    hardwareAcceleration: boolean;\r\n    vsync: boolean;\r\n    webGLEnabled: boolean;\r\n    batteryOptimizationMode: string;\r\n    onBattery?: boolean;\r\n  };\r\n  acceleration: boolean;\r\n  hardwareAcceleration: boolean;\r\n  timestamp: number;\r\n}\r\n\r\nexport default function GpuTestPage() {\r\n  const [gpuInfo, setGpuInfo] = useState<GpuInfo | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [batteryMode, setBatteryMode] = useState(false);\r\n\r\n  // GPU 정보 로드\r\n  useEffect(() => {\r\n    const fetchGpuInfo = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        \r\n        // Electron IPC를 통해 GPU 정보 요청\r\n        // @ts-ignore - window.electron은 Electron 환경에서만 사용 가능\r\n        if (window.electron) {\r\n          // @ts-ignore\r\n          const info = await window.electron.getGpuInfo();\r\n          setGpuInfo(info);\r\n        } else {\r\n          throw new Error('Electron 환경에서만 사용할 수 있습니다.');\r\n        }\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : '알 수 없는 오류가 발생했습니다.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchGpuInfo();\r\n\r\n    // 설정 변경 이벤트 리스너\r\n    // @ts-ignore\r\n    const handleGpuSettingsChanged = (_event, _data) => {\r\n      fetchGpuInfo();\r\n    };\r\n\r\n    // @ts-ignore\r\n    if (window.electron) {\r\n      // @ts-ignore\r\n      window.electron.on('gpu-settings-changed', handleGpuSettingsChanged);\r\n    }\r\n\r\n    return () => {\r\n      // @ts-ignore\r\n      if (window.electron) {\r\n        // @ts-ignore\r\n        window.electron.off('gpu-settings-changed', handleGpuSettingsChanged);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // GPU 가속 설정 변경\r\n  const handleToggleAcceleration = async () => {\r\n    if (!gpuInfo) return;\r\n    \r\n    try {\r\n      // @ts-ignore\r\n      await window.electron.setGpuAcceleration(!gpuInfo.acceleration);\r\n      // 앱 재시작 메시지 표시\r\n      alert('GPU 가속 설정이 변경되었습니다. 설정을 적용하려면 앱을 재시작하세요.');\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : '설정 변경 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  // 배터리 최적화 모드 설정 변경\r\n  const handleToggleBatteryMode = async () => {\r\n    try {\r\n      // @ts-ignore\r\n      await window.electron.optimizeForBattery(!batteryMode);\r\n      setBatteryMode(!batteryMode);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : '배터리 최적화 모드 설정 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const _handleWorkerMessage = useCallback((event: MessageEvent) => {\r\n    const _data = event.data;\r\n    // ... logic\r\n  }, []);\r\n\r\n  const _handleTestButtonClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const _event = event;\r\n    // ... logic\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">GPU 설정 및 진단</h1>\r\n      \r\n      {isLoading ? (\r\n        <div className=\"flex justify-center my-12\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary\"></div>\r\n        </div>\r\n      ) : error ? (\r\n        <Card className=\"bg-destructive/10 mb-6\">\r\n          <CardContent className=\"pt-6\">\r\n            <p className=\"text-destructive\">{error}</p>\r\n          </CardContent>\r\n        </Card>\r\n      ) : gpuInfo ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* GPU 설정 카드 */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>GPU 설정</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"gpu-acceleration\" className=\"flex-1\">\r\n                  GPU 가속\r\n                </Label>\r\n                <Switch\r\n                  id=\"gpu-acceleration\"\r\n                  checked={gpuInfo.acceleration}\r\n                  onCheckedChange={handleToggleAcceleration}\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"flex items-center justify-between\">\r\n                <Label htmlFor=\"battery-mode\" className=\"flex-1\">\r\n                  배터리 최적화 모드\r\n                </Label>\r\n                <Switch\r\n                  id=\"battery-mode\"\r\n                  checked={batteryMode || (gpuInfo.settings.onBattery || false)}\r\n                  onCheckedChange={handleToggleBatteryMode}\r\n                />\r\n              </div>\r\n              \r\n              <Separator className=\"my-4\" />\r\n              \r\n              <div className=\"text-sm text-muted-foreground\">\r\n                <p>GPU 가속 설정을 변경하면 앱을 재시작해야 합니다.</p>\r\n                <p className=\"mt-2\">배터리 최적화 모드는 즉시 적용됩니다.</p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          {/* GPU 정보 카드 */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>하드웨어 정보</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <h3 className=\"font-medium mb-2\">상태</h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  <Badge variant={gpuInfo.acceleration ? 'default' : 'outline'}>\r\n                    GPU 가속: {gpuInfo.acceleration ? '활성화' : '비활성화'}\r\n                  </Badge>\r\n                  <Badge variant={gpuInfo.settings.onBattery ? 'secondary' : 'outline'}>\r\n                    전원: {gpuInfo.settings.onBattery ? '배터리' : 'AC 전원'}\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n              \r\n              <Separator />\r\n              \r\n              <div>\r\n                <h3 className=\"font-medium mb-2\">GPU 기능</h3>\r\n                <div className=\"space-y-2\">\r\n                  {gpuInfo.features && Object.entries(gpuInfo.features).map(([key, value]) => (\r\n                    <div key={key} className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-muted-foreground\">{key}:</span>\r\n                      <span>{value}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n          \r\n          {/* 세부 설정 카드 */}\r\n          <Card className=\"md:col-span-2\">\r\n            <CardHeader>\r\n              <CardTitle>세부 설정 정보</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                {gpuInfo.settings && Object.entries(gpuInfo.settings).map(([key, value]) => {\r\n                  if (key === 'timestamp') return null;\r\n                  return (\r\n                    <div key={key} className=\"flex justify-between items-center\">\r\n                      <span className=\"text-muted-foreground\">{key}:</span>\r\n                      <span>\r\n                        {typeof value === 'boolean' \r\n                          ? (value ? '활성화' : '비활성화') \r\n                          : String(value)}\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        <Card>\r\n          <CardContent className=\"py-6\">\r\n            <p className=\"text-center text-muted-foreground\">GPU 정보를 불러올 수 없습니다.</p>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n      \r\n      <div className=\"mt-6 flex justify-end\">\r\n        <Button variant=\"outline\" onClick={() => window.history.back()}>\r\n          뒤로 가기\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import(/* webpackMode: \"eager\" */ \"/Users/user/loop/loop_3/src/app/gpu-test/page.tsx\");\n"],"names":["cn","inputs","twMerge","clsx","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","React","ref","className","asChild","props","Comp","Slot","displayName","Card","div","CardHeader","CardTitle","h3","CardDescription","p","CardContent","Separator","orientation","decorative","SeparatorPrimitive","Switch","SwitchPrimitives","labelVariants","Label","LabelPrimitive","badgeVariants","Badge","GpuTestPage","gpuInfo","setGpuInfo","useState","isLoading","setIsLoading","error","setError","batteryMode","setBatteryMode","useEffect","fetchGpuInfo","window","electron","info","getGpuInfo","err","Error","message","handleGpuSettingsChanged","_event","_data","on","off","handleToggleAcceleration","setGpuAcceleration","acceleration","alert","handleToggleBatteryMode","optimizeForBattery","useCallback","event","data","h1","htmlFor","id","checked","onCheckedChange","settings","onBattery","features","Object","entries","map","key","value","span","String","onClick","history","back"],"sourceRoot":"","ignoreList":[]}