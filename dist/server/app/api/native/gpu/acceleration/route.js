(()=>{var e={};e.id=543,e.ids=[543],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},64314:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>P,routeModule:()=>h,serverHooks:()=>j,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>v});var s={};r.r(s),r.d(s,{GET:()=>x,POST:()=>y,PUT:()=>m});var n=r(96559),a=r(48088),o=r(37719),c=r(32190);async function i(e,t={}){try{return await fetch(e,{...t,headers:{"Content-Type":"application/json",...t.headers}})}catch(t){throw console.error(`Fetch 요청 실패 (${e}):`,t),t}}async function u(e){try{let t=JSON.stringify({enable:e}),r=await i("/api/native/gpu/acceleration",{method:"PUT",body:t});if(!r.ok)throw Error(`GPU 가속 설정 요청 실패: ${r.status}`);return await r.json()}catch(e){return console.error("GPU 가속 설정 오류:",e),{success:!1,enabled:!1,result:!1,error:e instanceof Error?e.message:"알 수 없는 오류",timestamp:Date.now()}}}let l=null,p=0;async function d(e){try{let t=await u(e);if(t&&t.success)return l=null,!0;return!1}catch(t){return console.error(`GPU 가속화 ${e?"활성화":"비활성화"} 오류:`,t),!1}}async function g(){return d(!0)}async function f(){return d(!1)}async function x(e){try{let e;try{e=await g()}catch(t){e=!1,console.warn("enableGpuAcceleration failed, assuming disabled",t)}return c.NextResponse.json({success:!0,enabled:e})}catch(t){let e=t instanceof Error?t.message:String(t);return c.NextResponse.json({success:!1,enabled:!1,error:e},{status:500})}}async function y(e){try{let t;let r=await e.json();if(!0===r.enable){let e=await g();t={enabled:e,message:e?"GPU 가속이 활성화되었습니다.":"GPU 가속 활성화에 실패했습니다."}}else{let e=await f();t={enabled:!1,message:e?"GPU 가속이 비활성화되었습니다.":"GPU 가속 비활성화에 실패했습니다."}}return c.NextResponse.json({success:!0,enabled:t.enabled,message:t.message||null})}catch(t){let e=t instanceof Error?t.message:String(t);return c.NextResponse.json({success:!1,error:e},{status:500})}}async function m(e){try{let{settings:t}=await e.json();return c.NextResponse.json({success:!0,message:"설정이 적용되었습니다"})}catch(t){let e=t instanceof Error?t.message:String(t);return c.NextResponse.json({success:!1,error:e},{status:500})}}let h=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/native/gpu/acceleration/route",pathname:"/api/native/gpu/acceleration",filename:"route",bundlePath:"app/api/native/gpu/acceleration/route"},resolvedPagePath:"C:\\Users\\user\\Desktop\\loop\\src\\app\\api\\native\\gpu\\acceleration\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:w,workUnitAsyncStorage:v,serverHooks:j}=h;function P(){return(0,o.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:v})}},78335:()=>{},96487:()=>{}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(64314));module.exports=s})();